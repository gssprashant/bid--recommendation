name: CI - test, train, build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest -q || (echo 'pytest failed' && exit 1)

      - name: Generate sample data and train small model
        run: |
          python -c "from src.data_loader import save_sample_data; save_sample_data('data/sample_ci_data.csv', n=200)"
          python scripts/train.py --data-path data/sample_ci_data.csv --output models

      - name: List models
        run: ls -la models || true

      - name: Build Docker image
        run: |
          IMAGE_NAME=gss-bid-model:${{ github.sha }}
          docker build -t $IMAGE_NAME .
          docker save $IMAGE_NAME -o image.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-tar
          path: image.tar

      - name: Upload model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: models

  optional-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gss-bid-model:latest
